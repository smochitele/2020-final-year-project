//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Security_System.SecurityService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/SSH_Service")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateRegisteredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateRegistered {
            get {
                return this.DateRegisteredField;
            }
            set {
                if ((this.DateRegisteredField.Equals(value) != true)) {
                    this.DateRegisteredField = value;
                    this.RaisePropertyChanged("DateRegistered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="House", Namespace="http://schemas.datacontract.org/2004/07/SSH_Service")]
    [System.SerializableAttribute()]
    public partial class House : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlarmStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.Address HouseAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HouseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlarmStatus {
            get {
                return this.AlarmStatusField;
            }
            set {
                if ((this.AlarmStatusField.Equals(value) != true)) {
                    this.AlarmStatusField = value;
                    this.RaisePropertyChanged("AlarmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.Address HouseAddress {
            get {
                return this.HouseAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseAddressField, value) != true)) {
                    this.HouseAddressField = value;
                    this.RaisePropertyChanged("HouseAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HouseID {
            get {
                return this.HouseIDField;
            }
            set {
                if ((this.HouseIDField.Equals(value) != true)) {
                    this.HouseIDField = value;
                    this.RaisePropertyChanged("HouseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerID {
            get {
                return this.OwnerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerIDField, value) != true)) {
                    this.OwnerIDField = value;
                    this.RaisePropertyChanged("OwnerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/SSH_Service.Models")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HouseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LattituteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongituteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurburbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZIPCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HouseID {
            get {
                return this.HouseIDField;
            }
            set {
                if ((this.HouseIDField.Equals(value) != true)) {
                    this.HouseIDField = value;
                    this.RaisePropertyChanged("HouseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HouseNo {
            get {
                return this.HouseNoField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseNoField, value) != true)) {
                    this.HouseNoField = value;
                    this.RaisePropertyChanged("HouseNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lattitute {
            get {
                return this.LattituteField;
            }
            set {
                if ((object.ReferenceEquals(this.LattituteField, value) != true)) {
                    this.LattituteField = value;
                    this.RaisePropertyChanged("Lattitute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitute {
            get {
                return this.LongituteField;
            }
            set {
                if ((object.ReferenceEquals(this.LongituteField, value) != true)) {
                    this.LongituteField = value;
                    this.RaisePropertyChanged("Longitute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetName {
            get {
                return this.StreetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNameField, value) != true)) {
                    this.StreetNameField = value;
                    this.RaisePropertyChanged("StreetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surburb {
            get {
                return this.SurburbField;
            }
            set {
                if ((object.ReferenceEquals(this.SurburbField, value) != true)) {
                    this.SurburbField = value;
                    this.RaisePropertyChanged("Surburb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZIPCode {
            get {
                return this.ZIPCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZIPCodeField, value) != true)) {
                    this.ZIPCodeField = value;
                    this.RaisePropertyChanged("ZIPCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Package", Namespace="http://schemas.datacontract.org/2004/07/SSH_Service.Models")]
    [System.SerializableAttribute()]
    public partial class Package : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackageID {
            get {
                return this.PackageIDField;
            }
            set {
                if ((this.PackageIDField.Equals(value) != true)) {
                    this.PackageIDField = value;
                    this.RaisePropertyChanged("PackageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Case", Namespace="http://schemas.datacontract.org/2004/07/SSH_Service")]
    [System.SerializableAttribute()]
    public partial class Case : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HouseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReposponseTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RespondentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HouseID {
            get {
                return this.HouseIDField;
            }
            set {
                if ((this.HouseIDField.Equals(value) != true)) {
                    this.HouseIDField = value;
                    this.RaisePropertyChanged("HouseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReposponseTime {
            get {
                return this.ReposponseTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReposponseTimeField, value) != true)) {
                    this.ReposponseTimeField = value;
                    this.RaisePropertyChanged("ReposponseTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RespondentID {
            get {
                return this.RespondentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RespondentIDField, value) != true)) {
                    this.RespondentIDField = value;
                    this.RaisePropertyChanged("RespondentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Respondent", Namespace="http://schemas.datacontract.org/2004/07/SSH_Service.Models")]
    [System.SerializableAttribute()]
    public partial class Respondent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastLattituteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastLongituteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastLattitute {
            get {
                return this.LastLattituteField;
            }
            set {
                if ((object.ReferenceEquals(this.LastLattituteField, value) != true)) {
                    this.LastLattituteField = value;
                    this.RaisePropertyChanged("LastLattitute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastLongitute {
            get {
                return this.LastLongituteField;
            }
            set {
                if ((object.ReferenceEquals(this.LastLongituteField, value) != true)) {
                    this.LastLongituteField = value;
                    this.RaisePropertyChanged("LastLongitute");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeoLocation", Namespace="http://schemas.datacontract.org/2004/07/LiveSSH.Models")]
    [System.SerializableAttribute()]
    public partial class GeoLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LattitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lattitude {
            get {
                return this.LattitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LattitudeField, value) != true)) {
                    this.LattitudeField = value;
                    this.RaisePropertyChanged("Lattitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Alert", Namespace="http://schemas.datacontract.org/2004/07/LiveSSH.Models")]
    [System.SerializableAttribute()]
    public partial class Alert : Security_System.SecurityService.DB_Alert {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringDate {
            get {
                return this.StringDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StringDateField, value) != true)) {
                    this.StringDateField = value;
                    this.RaisePropertyChanged("StringDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DB_Alert", Namespace="http://schemas.datacontract.org/2004/07/LiveSSH")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Security_System.SecurityService.Alert))]
    public partial class DB_Alert : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlartMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlertIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_House DB_HouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_User DB_UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_User DB_User1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HouseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsFalseAlarmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OccupantIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RespondentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlartMethod {
            get {
                return this.AlartMethodField;
            }
            set {
                if ((this.AlartMethodField.Equals(value) != true)) {
                    this.AlartMethodField = value;
                    this.RaisePropertyChanged("AlartMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlertID {
            get {
                return this.AlertIDField;
            }
            set {
                if ((this.AlertIDField.Equals(value) != true)) {
                    this.AlertIDField = value;
                    this.RaisePropertyChanged("AlertID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_House DB_House {
            get {
                return this.DB_HouseField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_HouseField, value) != true)) {
                    this.DB_HouseField = value;
                    this.RaisePropertyChanged("DB_House");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_User DB_User {
            get {
                return this.DB_UserField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_UserField, value) != true)) {
                    this.DB_UserField = value;
                    this.RaisePropertyChanged("DB_User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_User DB_User1 {
            get {
                return this.DB_User1Field;
            }
            set {
                if ((object.ReferenceEquals(this.DB_User1Field, value) != true)) {
                    this.DB_User1Field = value;
                    this.RaisePropertyChanged("DB_User1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HouseID {
            get {
                return this.HouseIDField;
            }
            set {
                if ((this.HouseIDField.Equals(value) != true)) {
                    this.HouseIDField = value;
                    this.RaisePropertyChanged("HouseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsFalseAlarm {
            get {
                return this.IsFalseAlarmField;
            }
            set {
                if ((this.IsFalseAlarmField.Equals(value) != true)) {
                    this.IsFalseAlarmField = value;
                    this.RaisePropertyChanged("IsFalseAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OccupantID {
            get {
                return this.OccupantIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OccupantIDField, value) != true)) {
                    this.OccupantIDField = value;
                    this.RaisePropertyChanged("OccupantID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RespondentID {
            get {
                return this.RespondentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RespondentIDField, value) != true)) {
                    this.RespondentIDField = value;
                    this.RaisePropertyChanged("RespondentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DB_House", Namespace="http://schemas.datacontract.org/2004/07/LiveSSH")]
    [System.SerializableAttribute()]
    public partial class DB_House : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlarmStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_Address[] DB_AddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_Alert[] DB_AlertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_Case[] DB_CasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_HouseOwner DB_HouseOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HouseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlarmStatus {
            get {
                return this.AlarmStatusField;
            }
            set {
                if ((this.AlarmStatusField.Equals(value) != true)) {
                    this.AlarmStatusField = value;
                    this.RaisePropertyChanged("AlarmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_Address[] DB_Addresses {
            get {
                return this.DB_AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_AddressesField, value) != true)) {
                    this.DB_AddressesField = value;
                    this.RaisePropertyChanged("DB_Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_Alert[] DB_Alerts {
            get {
                return this.DB_AlertsField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_AlertsField, value) != true)) {
                    this.DB_AlertsField = value;
                    this.RaisePropertyChanged("DB_Alerts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_Case[] DB_Cases {
            get {
                return this.DB_CasesField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_CasesField, value) != true)) {
                    this.DB_CasesField = value;
                    this.RaisePropertyChanged("DB_Cases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_HouseOwner DB_HouseOwner {
            get {
                return this.DB_HouseOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_HouseOwnerField, value) != true)) {
                    this.DB_HouseOwnerField = value;
                    this.RaisePropertyChanged("DB_HouseOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HouseID {
            get {
                return this.HouseIDField;
            }
            set {
                if ((this.HouseIDField.Equals(value) != true)) {
                    this.HouseIDField = value;
                    this.RaisePropertyChanged("HouseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerID {
            get {
                return this.OwnerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerIDField, value) != true)) {
                    this.OwnerIDField = value;
                    this.RaisePropertyChanged("OwnerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DB_User", Namespace="http://schemas.datacontract.org/2004/07/LiveSSH")]
    [System.SerializableAttribute()]
    public partial class DB_User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_Alert[] DB_AlertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_Alert[] DB_Alerts1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_Case[] DB_CasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_HouseOccupant DB_HouseOccupantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_HouseOwner DB_HouseOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_Respondent DB_RespondentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateRegisteredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_Alert[] DB_Alerts {
            get {
                return this.DB_AlertsField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_AlertsField, value) != true)) {
                    this.DB_AlertsField = value;
                    this.RaisePropertyChanged("DB_Alerts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_Alert[] DB_Alerts1 {
            get {
                return this.DB_Alerts1Field;
            }
            set {
                if ((object.ReferenceEquals(this.DB_Alerts1Field, value) != true)) {
                    this.DB_Alerts1Field = value;
                    this.RaisePropertyChanged("DB_Alerts1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_Case[] DB_Cases {
            get {
                return this.DB_CasesField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_CasesField, value) != true)) {
                    this.DB_CasesField = value;
                    this.RaisePropertyChanged("DB_Cases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_HouseOccupant DB_HouseOccupant {
            get {
                return this.DB_HouseOccupantField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_HouseOccupantField, value) != true)) {
                    this.DB_HouseOccupantField = value;
                    this.RaisePropertyChanged("DB_HouseOccupant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_HouseOwner DB_HouseOwner {
            get {
                return this.DB_HouseOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_HouseOwnerField, value) != true)) {
                    this.DB_HouseOwnerField = value;
                    this.RaisePropertyChanged("DB_HouseOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_Respondent DB_Respondent {
            get {
                return this.DB_RespondentField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_RespondentField, value) != true)) {
                    this.DB_RespondentField = value;
                    this.RaisePropertyChanged("DB_Respondent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateRegistered {
            get {
                return this.DateRegisteredField;
            }
            set {
                if ((this.DateRegisteredField.Equals(value) != true)) {
                    this.DateRegisteredField = value;
                    this.RaisePropertyChanged("DateRegistered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DB_HouseOwner", Namespace="http://schemas.datacontract.org/2004/07/LiveSSH")]
    [System.SerializableAttribute()]
    public partial class DB_HouseOwner : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_HouseOccupant[] DB_HouseOccupantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_House[] DB_HousesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_Package DB_PackageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_User DB_UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PackageIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_HouseOccupant[] DB_HouseOccupants {
            get {
                return this.DB_HouseOccupantsField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_HouseOccupantsField, value) != true)) {
                    this.DB_HouseOccupantsField = value;
                    this.RaisePropertyChanged("DB_HouseOccupants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_House[] DB_Houses {
            get {
                return this.DB_HousesField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_HousesField, value) != true)) {
                    this.DB_HousesField = value;
                    this.RaisePropertyChanged("DB_Houses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_Package DB_Package {
            get {
                return this.DB_PackageField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_PackageField, value) != true)) {
                    this.DB_PackageField = value;
                    this.RaisePropertyChanged("DB_Package");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_User DB_User {
            get {
                return this.DB_UserField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_UserField, value) != true)) {
                    this.DB_UserField = value;
                    this.RaisePropertyChanged("DB_User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PackageID {
            get {
                return this.PackageIDField;
            }
            set {
                if ((this.PackageIDField.Equals(value) != true)) {
                    this.PackageIDField = value;
                    this.RaisePropertyChanged("PackageID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DB_Address", Namespace="http://schemas.datacontract.org/2004/07/LiveSSH")]
    [System.SerializableAttribute()]
    public partial class DB_Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_House DB_HouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HouseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LattituteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongituteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurburbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZIPCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_House DB_House {
            get {
                return this.DB_HouseField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_HouseField, value) != true)) {
                    this.DB_HouseField = value;
                    this.RaisePropertyChanged("DB_House");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HouseID {
            get {
                return this.HouseIDField;
            }
            set {
                if ((this.HouseIDField.Equals(value) != true)) {
                    this.HouseIDField = value;
                    this.RaisePropertyChanged("HouseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HouseNo {
            get {
                return this.HouseNoField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseNoField, value) != true)) {
                    this.HouseNoField = value;
                    this.RaisePropertyChanged("HouseNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lattitute {
            get {
                return this.LattituteField;
            }
            set {
                if ((object.ReferenceEquals(this.LattituteField, value) != true)) {
                    this.LattituteField = value;
                    this.RaisePropertyChanged("Lattitute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitute {
            get {
                return this.LongituteField;
            }
            set {
                if ((object.ReferenceEquals(this.LongituteField, value) != true)) {
                    this.LongituteField = value;
                    this.RaisePropertyChanged("Longitute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetName {
            get {
                return this.StreetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNameField, value) != true)) {
                    this.StreetNameField = value;
                    this.RaisePropertyChanged("StreetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surburb {
            get {
                return this.SurburbField;
            }
            set {
                if ((object.ReferenceEquals(this.SurburbField, value) != true)) {
                    this.SurburbField = value;
                    this.RaisePropertyChanged("Surburb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZIPCode {
            get {
                return this.ZIPCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZIPCodeField, value) != true)) {
                    this.ZIPCodeField = value;
                    this.RaisePropertyChanged("ZIPCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DB_Case", Namespace="http://schemas.datacontract.org/2004/07/LiveSSH")]
    [System.SerializableAttribute()]
    public partial class DB_Case : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_House DB_HouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_Respondent DB_RespondentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_User DB_UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HouseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReposponseTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RespondentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_House DB_House {
            get {
                return this.DB_HouseField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_HouseField, value) != true)) {
                    this.DB_HouseField = value;
                    this.RaisePropertyChanged("DB_House");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_Respondent DB_Respondent {
            get {
                return this.DB_RespondentField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_RespondentField, value) != true)) {
                    this.DB_RespondentField = value;
                    this.RaisePropertyChanged("DB_Respondent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_User DB_User {
            get {
                return this.DB_UserField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_UserField, value) != true)) {
                    this.DB_UserField = value;
                    this.RaisePropertyChanged("DB_User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HouseID {
            get {
                return this.HouseIDField;
            }
            set {
                if ((this.HouseIDField.Equals(value) != true)) {
                    this.HouseIDField = value;
                    this.RaisePropertyChanged("HouseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReposponseTime {
            get {
                return this.ReposponseTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReposponseTimeField, value) != true)) {
                    this.ReposponseTimeField = value;
                    this.RaisePropertyChanged("ReposponseTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RespondentID {
            get {
                return this.RespondentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RespondentIDField, value) != true)) {
                    this.RespondentIDField = value;
                    this.RaisePropertyChanged("RespondentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DB_Respondent", Namespace="http://schemas.datacontract.org/2004/07/LiveSSH")]
    [System.SerializableAttribute()]
    public partial class DB_Respondent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_Case[] DB_CasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_User DB_UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastLattituteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastLongituteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_Case[] DB_Cases {
            get {
                return this.DB_CasesField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_CasesField, value) != true)) {
                    this.DB_CasesField = value;
                    this.RaisePropertyChanged("DB_Cases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_User DB_User {
            get {
                return this.DB_UserField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_UserField, value) != true)) {
                    this.DB_UserField = value;
                    this.RaisePropertyChanged("DB_User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastLattitute {
            get {
                return this.LastLattituteField;
            }
            set {
                if ((object.ReferenceEquals(this.LastLattituteField, value) != true)) {
                    this.LastLattituteField = value;
                    this.RaisePropertyChanged("LastLattitute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastLongitute {
            get {
                return this.LastLongituteField;
            }
            set {
                if ((object.ReferenceEquals(this.LastLongituteField, value) != true)) {
                    this.LastLongituteField = value;
                    this.RaisePropertyChanged("LastLongitute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DB_HouseOccupant", Namespace="http://schemas.datacontract.org/2004/07/LiveSSH")]
    [System.SerializableAttribute()]
    public partial class DB_HouseOccupant : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_HouseOwner DB_HouseOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_User DB_UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseOwnerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_HouseOwner DB_HouseOwner {
            get {
                return this.DB_HouseOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_HouseOwnerField, value) != true)) {
                    this.DB_HouseOwnerField = value;
                    this.RaisePropertyChanged("DB_HouseOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_User DB_User {
            get {
                return this.DB_UserField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_UserField, value) != true)) {
                    this.DB_UserField = value;
                    this.RaisePropertyChanged("DB_User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HouseOwnerID {
            get {
                return this.HouseOwnerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseOwnerIDField, value) != true)) {
                    this.HouseOwnerIDField = value;
                    this.RaisePropertyChanged("HouseOwnerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DB_Package", Namespace="http://schemas.datacontract.org/2004/07/LiveSSH")]
    [System.SerializableAttribute()]
    public partial class DB_Package : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Security_System.SecurityService.DB_HouseOwner[] DB_HouseOwnersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Security_System.SecurityService.DB_HouseOwner[] DB_HouseOwners {
            get {
                return this.DB_HouseOwnersField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_HouseOwnersField, value) != true)) {
                    this.DB_HouseOwnersField = value;
                    this.RaisePropertyChanged("DB_HouseOwners");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackageID {
            get {
                return this.PackageIDField;
            }
            set {
                if ((this.PackageIDField.Equals(value) != true)) {
                    this.PackageIDField = value;
                    this.RaisePropertyChanged("PackageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StringDateCase", Namespace="http://schemas.datacontract.org/2004/07/LiveSSH.Models")]
    [System.SerializableAttribute()]
    public partial class StringDateCase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fullnamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fullnames {
            get {
                return this.fullnamesField;
            }
            set {
                if ((object.ReferenceEquals(this.fullnamesField, value) != true)) {
                    this.fullnamesField = value;
                    this.RaisePropertyChanged("fullnames");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecurityService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        Security_System.SecurityService.User GetUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.User> GetUserAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        Security_System.SecurityService.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHouseOwner", ReplyAction="http://tempuri.org/IService1/GetHouseOwnerResponse")]
        Security_System.SecurityService.User GetHouseOwner(string username, string password, int userType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHouseOwner", ReplyAction="http://tempuri.org/IService1/GetHouseOwnerResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.User> GetHouseOwnerAsync(string username, string password, int userType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOccupant", ReplyAction="http://tempuri.org/IService1/GetOccupantResponse")]
        Security_System.SecurityService.User GetOccupant(string username, string password, int userType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOccupant", ReplyAction="http://tempuri.org/IService1/GetOccupantResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.User> GetOccupantAsync(string username, string password, int userType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRespondent", ReplyAction="http://tempuri.org/IService1/GetRespondentResponse")]
        Security_System.SecurityService.User GetRespondent(string username, string password, int userType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRespondent", ReplyAction="http://tempuri.org/IService1/GetRespondentResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.User> GetRespondentAsync(string username, string password, int userType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOwnerOccupants", ReplyAction="http://tempuri.org/IService1/GetOwnerOccupantsResponse")]
        Security_System.SecurityService.User[] GetOwnerOccupants(string ownerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOwnerOccupants", ReplyAction="http://tempuri.org/IService1/GetOwnerOccupantsResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.User[]> GetOwnerOccupantsAsync(string ownerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterOwner", ReplyAction="http://tempuri.org/IService1/RegisterOwnerResponse")]
        int RegisterOwner(Security_System.SecurityService.User user, Security_System.SecurityService.House house, int packageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterOwner", ReplyAction="http://tempuri.org/IService1/RegisterOwnerResponse")]
        System.Threading.Tasks.Task<int> RegisterOwnerAsync(Security_System.SecurityService.User user, Security_System.SecurityService.House house, int packageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterOccupant", ReplyAction="http://tempuri.org/IService1/RegisterOccupantResponse")]
        int RegisterOccupant(Security_System.SecurityService.User occupant, string houseOwnerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterOccupant", ReplyAction="http://tempuri.org/IService1/RegisterOccupantResponse")]
        System.Threading.Tasks.Task<int> RegisterOccupantAsync(Security_System.SecurityService.User occupant, string houseOwnerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterRespondent", ReplyAction="http://tempuri.org/IService1/RegisterRespondentResponse")]
        int RegisterRespondent(Security_System.SecurityService.User repondent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterRespondent", ReplyAction="http://tempuri.org/IService1/RegisterRespondentResponse")]
        System.Threading.Tasks.Task<int> RegisterRespondentAsync(Security_System.SecurityService.User repondent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteOccupant", ReplyAction="http://tempuri.org/IService1/DeleteOccupantResponse")]
        int DeleteOccupant(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteOccupant", ReplyAction="http://tempuri.org/IService1/DeleteOccupantResponse")]
        System.Threading.Tasks.Task<int> DeleteOccupantAsync(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRespondent", ReplyAction="http://tempuri.org/IService1/DeleteRespondentResponse")]
        int DeleteRespondent(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRespondent", ReplyAction="http://tempuri.org/IService1/DeleteRespondentResponse")]
        System.Threading.Tasks.Task<int> DeleteRespondentAsync(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteOwner", ReplyAction="http://tempuri.org/IService1/DeleteOwnerResponse")]
        int DeleteOwner(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteOwner", ReplyAction="http://tempuri.org/IService1/DeleteOwnerResponse")]
        System.Threading.Tasks.Task<int> DeleteOwnerAsync(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditUser", ReplyAction="http://tempuri.org/IService1/EditUserResponse")]
        int EditUser(string userID, string name, string surname, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditUser", ReplyAction="http://tempuri.org/IService1/EditUserResponse")]
        System.Threading.Tasks.Task<int> EditUserAsync(string userID, string name, string surname, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangePassword", ReplyAction="http://tempuri.org/IService1/ChangePasswordResponse")]
        int ChangePassword(string userID, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangePassword", ReplyAction="http://tempuri.org/IService1/ChangePasswordResponse")]
        System.Threading.Tasks.Task<int> ChangePasswordAsync(string userID, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Packages", ReplyAction="http://tempuri.org/IService1/PackagesResponse")]
        Security_System.SecurityService.Package[] Packages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Packages", ReplyAction="http://tempuri.org/IService1/PackagesResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.Package[]> PackagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserPackage", ReplyAction="http://tempuri.org/IService1/UserPackageResponse")]
        Security_System.SecurityService.Package UserPackage(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserPackage", ReplyAction="http://tempuri.org/IService1/UserPackageResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.Package> UserPackageAsync(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCases", ReplyAction="http://tempuri.org/IService1/GetAllCasesResponse")]
        Security_System.SecurityService.Case[] GetAllCases();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCases", ReplyAction="http://tempuri.org/IService1/GetAllCasesResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.Case[]> GetAllCasesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCase", ReplyAction="http://tempuri.org/IService1/AddCaseResponse")]
        int AddCase(string userID, string respondentID, string description, string houseID, string Strdatetime, string StrresponseTime, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCase", ReplyAction="http://tempuri.org/IService1/AddCaseResponse")]
        System.Threading.Tasks.Task<int> AddCaseAsync(string userID, string respondentID, string description, string houseID, string Strdatetime, string StrresponseTime, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HouseCases", ReplyAction="http://tempuri.org/IService1/HouseCasesResponse")]
        Security_System.SecurityService.Case[] HouseCases(string ownerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HouseCases", ReplyAction="http://tempuri.org/IService1/HouseCasesResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.Case[]> HouseCasesAsync(string ownerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateRespondentLocation", ReplyAction="http://tempuri.org/IService1/UpdateRespondentLocationResponse")]
        int UpdateRespondentLocation(string respondentID, string longitute, string lattitue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateRespondentLocation", ReplyAction="http://tempuri.org/IService1/UpdateRespondentLocationResponse")]
        System.Threading.Tasks.Task<int> UpdateRespondentLocationAsync(string respondentID, string longitute, string lattitue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PanicAlert", ReplyAction="http://tempuri.org/IService1/PanicAlertResponse")]
        Security_System.SecurityService.Respondent PanicAlert(string userID, int AlertType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PanicAlert", ReplyAction="http://tempuri.org/IService1/PanicAlertResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.Respondent> PanicAlertAsync(string userID, int AlertType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserHome", ReplyAction="http://tempuri.org/IService1/GetUserHomeResponse")]
        Security_System.SecurityService.House GetUserHome(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserHome", ReplyAction="http://tempuri.org/IService1/GetUserHomeResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.House> GetUserHomeAsync(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserAddress", ReplyAction="http://tempuri.org/IService1/GetUserAddressResponse")]
        Security_System.SecurityService.Address GetUserAddress(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserAddress", ReplyAction="http://tempuri.org/IService1/GetUserAddressResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.Address> GetUserAddressAsync(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckAlerts", ReplyAction="http://tempuri.org/IService1/CheckAlertsResponse")]
        Security_System.SecurityService.GeoLocation CheckAlerts(string respondentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckAlerts", ReplyAction="http://tempuri.org/IService1/CheckAlertsResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.GeoLocation> CheckAlertsAsync(string respondentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckCustomAlerts", ReplyAction="http://tempuri.org/IService1/CheckCustomAlertsResponse")]
        string CheckCustomAlerts(string respondentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckCustomAlerts", ReplyAction="http://tempuri.org/IService1/CheckCustomAlertsResponse")]
        System.Threading.Tasks.Task<string> CheckCustomAlertsAsync(string respondentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRespondentCases", ReplyAction="http://tempuri.org/IService1/GetRespondentCasesResponse")]
        Security_System.SecurityService.Case[] GetRespondentCases(string respondentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRespondentCases", ReplyAction="http://tempuri.org/IService1/GetRespondentCasesResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.Case[]> GetRespondentCasesAsync(string respondentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserByID", ReplyAction="http://tempuri.org/IService1/GetUserByIDResponse")]
        Security_System.SecurityService.User GetUserByID(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserByID", ReplyAction="http://tempuri.org/IService1/GetUserByIDResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.User> GetUserByIDAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ActiveCases", ReplyAction="http://tempuri.org/IService1/ActiveCasesResponse")]
        int ActiveCases(string ownerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ActiveCases", ReplyAction="http://tempuri.org/IService1/ActiveCasesResponse")]
        System.Threading.Tasks.Task<int> ActiveCasesAsync(string ownerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllActiveCases", ReplyAction="http://tempuri.org/IService1/AllActiveCasesResponse")]
        int AllActiveCases();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllActiveCases", ReplyAction="http://tempuri.org/IService1/AllActiveCasesResponse")]
        System.Threading.Tasks.Task<int> AllActiveCasesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TotalOccupants", ReplyAction="http://tempuri.org/IService1/TotalOccupantsResponse")]
        int TotalOccupants();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TotalOccupants", ReplyAction="http://tempuri.org/IService1/TotalOccupantsResponse")]
        System.Threading.Tasks.Task<int> TotalOccupantsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TotalRespondents", ReplyAction="http://tempuri.org/IService1/TotalRespondentsResponse")]
        int TotalRespondents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TotalRespondents", ReplyAction="http://tempuri.org/IService1/TotalRespondentsResponse")]
        System.Threading.Tasks.Task<int> TotalRespondentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TotalHomeOwners", ReplyAction="http://tempuri.org/IService1/TotalHomeOwnersResponse")]
        int TotalHomeOwners();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TotalHomeOwners", ReplyAction="http://tempuri.org/IService1/TotalHomeOwnersResponse")]
        System.Threading.Tasks.Task<int> TotalHomeOwnersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllRespondents", ReplyAction="http://tempuri.org/IService1/GetAllRespondentsResponse")]
        Security_System.SecurityService.User[] GetAllRespondents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllRespondents", ReplyAction="http://tempuri.org/IService1/GetAllRespondentsResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.User[]> GetAllRespondentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCasesByRespondent", ReplyAction="http://tempuri.org/IService1/GetCasesByRespondentResponse")]
        Security_System.SecurityService.Case[] GetCasesByRespondent(string respondentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCasesByRespondent", ReplyAction="http://tempuri.org/IService1/GetCasesByRespondentResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.Case[]> GetCasesByRespondentAsync(string respondentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCasesForLastSevenDays", ReplyAction="http://tempuri.org/IService1/GetCasesForLastSevenDaysResponse")]
        int[] GetCasesForLastSevenDays();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCasesForLastSevenDays", ReplyAction="http://tempuri.org/IService1/GetCasesForLastSevenDaysResponse")]
        System.Threading.Tasks.Task<int[]> GetCasesForLastSevenDaysAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAlerts", ReplyAction="http://tempuri.org/IService1/GetAlertsResponse")]
        Security_System.SecurityService.Alert[] GetAlerts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAlerts", ReplyAction="http://tempuri.org/IService1/GetAlertsResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.Alert[]> GetAlertsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRespondentAlerts", ReplyAction="http://tempuri.org/IService1/GetRespondentAlertsResponse")]
        Security_System.SecurityService.Alert[] GetRespondentAlerts(string respondentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRespondentAlerts", ReplyAction="http://tempuri.org/IService1/GetRespondentAlertsResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.Alert[]> GetRespondentAlertsAsync(string respondentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserAlerts", ReplyAction="http://tempuri.org/IService1/GetUserAlertsResponse")]
        Security_System.SecurityService.Alert[] GetUserAlerts(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserAlerts", ReplyAction="http://tempuri.org/IService1/GetUserAlertsResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.Alert[]> GetUserAlertsAsync(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBestRespondent", ReplyAction="http://tempuri.org/IService1/getBestRespondentResponse")]
        string[] getBestRespondent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBestRespondent", ReplyAction="http://tempuri.org/IService1/getBestRespondentResponse")]
        System.Threading.Tasks.Task<string[]> getBestRespondentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWorstRespondent", ReplyAction="http://tempuri.org/IService1/getWorstRespondentResponse")]
        string[] getWorstRespondent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWorstRespondent", ReplyAction="http://tempuri.org/IService1/getWorstRespondentResponse")]
        System.Threading.Tasks.Task<string[]> getWorstRespondentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top5Cities", ReplyAction="http://tempuri.org/IService1/Top5CitiesResponse")]
        string[] Top5Cities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top5Cities", ReplyAction="http://tempuri.org/IService1/Top5CitiesResponse")]
        System.Threading.Tasks.Task<string[]> Top5CitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top5Surbub", ReplyAction="http://tempuri.org/IService1/Top5SurbubResponse")]
        string[] Top5Surbub(string CityName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top5Surbub", ReplyAction="http://tempuri.org/IService1/Top5SurbubResponse")]
        System.Threading.Tasks.Task<string[]> Top5SurbubAsync(string CityName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAreaCases", ReplyAction="http://tempuri.org/IService1/GetAreaCasesResponse")]
        Security_System.SecurityService.Case[] GetAreaCases(string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAreaCases", ReplyAction="http://tempuri.org/IService1/GetAreaCasesResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.Case[]> GetAreaCasesAsync(string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTimeInterval", ReplyAction="http://tempuri.org/IService1/GetTimeIntervalResponse")]
        string GetTimeInterval();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTimeInterval", ReplyAction="http://tempuri.org/IService1/GetTimeIntervalResponse")]
        System.Threading.Tasks.Task<string> GetTimeIntervalAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TriggerAlarm", ReplyAction="http://tempuri.org/IService1/TriggerAlarmResponse")]
        int TriggerAlarm(string userID, int triggerType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TriggerAlarm", ReplyAction="http://tempuri.org/IService1/TriggerAlarmResponse")]
        System.Threading.Tasks.Task<int> TriggerAlarmAsync(string userID, int triggerType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckHomeAlerts", ReplyAction="http://tempuri.org/IService1/CheckHomeAlertsResponse")]
        string CheckHomeAlerts(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckHomeAlerts", ReplyAction="http://tempuri.org/IService1/CheckHomeAlertsResponse")]
        System.Threading.Tasks.Task<string> CheckHomeAlertsAsync(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllAdresses", ReplyAction="http://tempuri.org/IService1/GetAllAdressesResponse")]
        Security_System.SecurityService.Address[] GetAllAdresses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllAdresses", ReplyAction="http://tempuri.org/IService1/GetAllAdressesResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.Address[]> GetAllAdressesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetResCases", ReplyAction="http://tempuri.org/IService1/GetResCasesResponse")]
        Security_System.SecurityService.StringDateCase[] GetResCases(string respondentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetResCases", ReplyAction="http://tempuri.org/IService1/GetResCasesResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.StringDateCase[]> GetResCasesAsync(string respondentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Respondent_DutyStatus", ReplyAction="http://tempuri.org/IService1/Respondent_DutyStatusResponse")]
        int Respondent_DutyStatus(string respondentID, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Respondent_DutyStatus", ReplyAction="http://tempuri.org/IService1/Respondent_DutyStatusResponse")]
        System.Threading.Tasks.Task<int> Respondent_DutyStatusAsync(string respondentID, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCaseObject", ReplyAction="http://tempuri.org/IService1/AddCaseObjectResponse")]
        string AddCaseObject(string data, string description, string Strdatetime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCaseObject", ReplyAction="http://tempuri.org/IService1/AddCaseObjectResponse")]
        System.Threading.Tasks.Task<string> AddCaseObjectAsync(string data, string description, string Strdatetime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGeoLocations", ReplyAction="http://tempuri.org/IService1/GetGeoLocationsResponse")]
        Security_System.SecurityService.GeoLocation[] GetGeoLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGeoLocations", ReplyAction="http://tempuri.org/IService1/GetGeoLocationsResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.GeoLocation[]> GetGeoLocationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRespondentLocation", ReplyAction="http://tempuri.org/IService1/GetRespondentLocationResponse")]
        Security_System.SecurityService.GeoLocation GetRespondentLocation(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRespondentLocation", ReplyAction="http://tempuri.org/IService1/GetRespondentLocationResponse")]
        System.Threading.Tasks.Task<Security_System.SecurityService.GeoLocation> GetRespondentLocationAsync(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOccupant", ReplyAction="http://tempuri.org/IService1/AddOccupantResponse")]
        int AddOccupant(string name, string surname, string id, string email, string ownwerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOccupant", ReplyAction="http://tempuri.org/IService1/AddOccupantResponse")]
        System.Threading.Tasks.Task<int> AddOccupantAsync(string name, string surname, string id, string email, string ownwerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SolveCase", ReplyAction="http://tempuri.org/IService1/SolveCaseResponse")]
        int SolveCase(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SolveCase", ReplyAction="http://tempuri.org/IService1/SolveCaseResponse")]
        System.Threading.Tasks.Task<int> SolveCaseAsync(int caseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStatus", ReplyAction="http://tempuri.org/IService1/GetStatusResponse")]
        int GetStatus(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStatus", ReplyAction="http://tempuri.org/IService1/GetStatusResponse")]
        System.Threading.Tasks.Task<int> GetStatusAsync(string userID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Security_System.SecurityService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Security_System.SecurityService.IService1>, Security_System.SecurityService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Security_System.SecurityService.User GetUser(string username, string password) {
            return base.Channel.GetUser(username, password);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.User> GetUserAsync(string username, string password) {
            return base.Channel.GetUserAsync(username, password);
        }
        
        public Security_System.SecurityService.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.User[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public Security_System.SecurityService.User GetHouseOwner(string username, string password, int userType) {
            return base.Channel.GetHouseOwner(username, password, userType);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.User> GetHouseOwnerAsync(string username, string password, int userType) {
            return base.Channel.GetHouseOwnerAsync(username, password, userType);
        }
        
        public Security_System.SecurityService.User GetOccupant(string username, string password, int userType) {
            return base.Channel.GetOccupant(username, password, userType);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.User> GetOccupantAsync(string username, string password, int userType) {
            return base.Channel.GetOccupantAsync(username, password, userType);
        }
        
        public Security_System.SecurityService.User GetRespondent(string username, string password, int userType) {
            return base.Channel.GetRespondent(username, password, userType);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.User> GetRespondentAsync(string username, string password, int userType) {
            return base.Channel.GetRespondentAsync(username, password, userType);
        }
        
        public Security_System.SecurityService.User[] GetOwnerOccupants(string ownerID) {
            return base.Channel.GetOwnerOccupants(ownerID);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.User[]> GetOwnerOccupantsAsync(string ownerID) {
            return base.Channel.GetOwnerOccupantsAsync(ownerID);
        }
        
        public int RegisterOwner(Security_System.SecurityService.User user, Security_System.SecurityService.House house, int packageID) {
            return base.Channel.RegisterOwner(user, house, packageID);
        }
        
        public System.Threading.Tasks.Task<int> RegisterOwnerAsync(Security_System.SecurityService.User user, Security_System.SecurityService.House house, int packageID) {
            return base.Channel.RegisterOwnerAsync(user, house, packageID);
        }
        
        public int RegisterOccupant(Security_System.SecurityService.User occupant, string houseOwnerID) {
            return base.Channel.RegisterOccupant(occupant, houseOwnerID);
        }
        
        public System.Threading.Tasks.Task<int> RegisterOccupantAsync(Security_System.SecurityService.User occupant, string houseOwnerID) {
            return base.Channel.RegisterOccupantAsync(occupant, houseOwnerID);
        }
        
        public int RegisterRespondent(Security_System.SecurityService.User repondent) {
            return base.Channel.RegisterRespondent(repondent);
        }
        
        public System.Threading.Tasks.Task<int> RegisterRespondentAsync(Security_System.SecurityService.User repondent) {
            return base.Channel.RegisterRespondentAsync(repondent);
        }
        
        public int DeleteOccupant(string userID) {
            return base.Channel.DeleteOccupant(userID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteOccupantAsync(string userID) {
            return base.Channel.DeleteOccupantAsync(userID);
        }
        
        public int DeleteRespondent(string userID) {
            return base.Channel.DeleteRespondent(userID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRespondentAsync(string userID) {
            return base.Channel.DeleteRespondentAsync(userID);
        }
        
        public int DeleteOwner(string userID) {
            return base.Channel.DeleteOwner(userID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteOwnerAsync(string userID) {
            return base.Channel.DeleteOwnerAsync(userID);
        }
        
        public int EditUser(string userID, string name, string surname, string email) {
            return base.Channel.EditUser(userID, name, surname, email);
        }
        
        public System.Threading.Tasks.Task<int> EditUserAsync(string userID, string name, string surname, string email) {
            return base.Channel.EditUserAsync(userID, name, surname, email);
        }
        
        public int ChangePassword(string userID, string newPassword) {
            return base.Channel.ChangePassword(userID, newPassword);
        }
        
        public System.Threading.Tasks.Task<int> ChangePasswordAsync(string userID, string newPassword) {
            return base.Channel.ChangePasswordAsync(userID, newPassword);
        }
        
        public Security_System.SecurityService.Package[] Packages() {
            return base.Channel.Packages();
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.Package[]> PackagesAsync() {
            return base.Channel.PackagesAsync();
        }
        
        public Security_System.SecurityService.Package UserPackage(string userID) {
            return base.Channel.UserPackage(userID);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.Package> UserPackageAsync(string userID) {
            return base.Channel.UserPackageAsync(userID);
        }
        
        public Security_System.SecurityService.Case[] GetAllCases() {
            return base.Channel.GetAllCases();
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.Case[]> GetAllCasesAsync() {
            return base.Channel.GetAllCasesAsync();
        }
        
        public int AddCase(string userID, string respondentID, string description, string houseID, string Strdatetime, string StrresponseTime, string type) {
            return base.Channel.AddCase(userID, respondentID, description, houseID, Strdatetime, StrresponseTime, type);
        }
        
        public System.Threading.Tasks.Task<int> AddCaseAsync(string userID, string respondentID, string description, string houseID, string Strdatetime, string StrresponseTime, string type) {
            return base.Channel.AddCaseAsync(userID, respondentID, description, houseID, Strdatetime, StrresponseTime, type);
        }
        
        public Security_System.SecurityService.Case[] HouseCases(string ownerID) {
            return base.Channel.HouseCases(ownerID);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.Case[]> HouseCasesAsync(string ownerID) {
            return base.Channel.HouseCasesAsync(ownerID);
        }
        
        public int UpdateRespondentLocation(string respondentID, string longitute, string lattitue) {
            return base.Channel.UpdateRespondentLocation(respondentID, longitute, lattitue);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRespondentLocationAsync(string respondentID, string longitute, string lattitue) {
            return base.Channel.UpdateRespondentLocationAsync(respondentID, longitute, lattitue);
        }
        
        public Security_System.SecurityService.Respondent PanicAlert(string userID, int AlertType) {
            return base.Channel.PanicAlert(userID, AlertType);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.Respondent> PanicAlertAsync(string userID, int AlertType) {
            return base.Channel.PanicAlertAsync(userID, AlertType);
        }
        
        public Security_System.SecurityService.House GetUserHome(string userID) {
            return base.Channel.GetUserHome(userID);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.House> GetUserHomeAsync(string userID) {
            return base.Channel.GetUserHomeAsync(userID);
        }
        
        public Security_System.SecurityService.Address GetUserAddress(string userID) {
            return base.Channel.GetUserAddress(userID);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.Address> GetUserAddressAsync(string userID) {
            return base.Channel.GetUserAddressAsync(userID);
        }
        
        public Security_System.SecurityService.GeoLocation CheckAlerts(string respondentID) {
            return base.Channel.CheckAlerts(respondentID);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.GeoLocation> CheckAlertsAsync(string respondentID) {
            return base.Channel.CheckAlertsAsync(respondentID);
        }
        
        public string CheckCustomAlerts(string respondentID) {
            return base.Channel.CheckCustomAlerts(respondentID);
        }
        
        public System.Threading.Tasks.Task<string> CheckCustomAlertsAsync(string respondentID) {
            return base.Channel.CheckCustomAlertsAsync(respondentID);
        }
        
        public Security_System.SecurityService.Case[] GetRespondentCases(string respondentID) {
            return base.Channel.GetRespondentCases(respondentID);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.Case[]> GetRespondentCasesAsync(string respondentID) {
            return base.Channel.GetRespondentCasesAsync(respondentID);
        }
        
        public Security_System.SecurityService.User GetUserByID(string ID) {
            return base.Channel.GetUserByID(ID);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.User> GetUserByIDAsync(string ID) {
            return base.Channel.GetUserByIDAsync(ID);
        }
        
        public int ActiveCases(string ownerID) {
            return base.Channel.ActiveCases(ownerID);
        }
        
        public System.Threading.Tasks.Task<int> ActiveCasesAsync(string ownerID) {
            return base.Channel.ActiveCasesAsync(ownerID);
        }
        
        public int AllActiveCases() {
            return base.Channel.AllActiveCases();
        }
        
        public System.Threading.Tasks.Task<int> AllActiveCasesAsync() {
            return base.Channel.AllActiveCasesAsync();
        }
        
        public int TotalOccupants() {
            return base.Channel.TotalOccupants();
        }
        
        public System.Threading.Tasks.Task<int> TotalOccupantsAsync() {
            return base.Channel.TotalOccupantsAsync();
        }
        
        public int TotalRespondents() {
            return base.Channel.TotalRespondents();
        }
        
        public System.Threading.Tasks.Task<int> TotalRespondentsAsync() {
            return base.Channel.TotalRespondentsAsync();
        }
        
        public int TotalHomeOwners() {
            return base.Channel.TotalHomeOwners();
        }
        
        public System.Threading.Tasks.Task<int> TotalHomeOwnersAsync() {
            return base.Channel.TotalHomeOwnersAsync();
        }
        
        public Security_System.SecurityService.User[] GetAllRespondents() {
            return base.Channel.GetAllRespondents();
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.User[]> GetAllRespondentsAsync() {
            return base.Channel.GetAllRespondentsAsync();
        }
        
        public Security_System.SecurityService.Case[] GetCasesByRespondent(string respondentID) {
            return base.Channel.GetCasesByRespondent(respondentID);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.Case[]> GetCasesByRespondentAsync(string respondentID) {
            return base.Channel.GetCasesByRespondentAsync(respondentID);
        }
        
        public int[] GetCasesForLastSevenDays() {
            return base.Channel.GetCasesForLastSevenDays();
        }
        
        public System.Threading.Tasks.Task<int[]> GetCasesForLastSevenDaysAsync() {
            return base.Channel.GetCasesForLastSevenDaysAsync();
        }
        
        public Security_System.SecurityService.Alert[] GetAlerts() {
            return base.Channel.GetAlerts();
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.Alert[]> GetAlertsAsync() {
            return base.Channel.GetAlertsAsync();
        }
        
        public Security_System.SecurityService.Alert[] GetRespondentAlerts(string respondentID) {
            return base.Channel.GetRespondentAlerts(respondentID);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.Alert[]> GetRespondentAlertsAsync(string respondentID) {
            return base.Channel.GetRespondentAlertsAsync(respondentID);
        }
        
        public Security_System.SecurityService.Alert[] GetUserAlerts(string userID) {
            return base.Channel.GetUserAlerts(userID);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.Alert[]> GetUserAlertsAsync(string userID) {
            return base.Channel.GetUserAlertsAsync(userID);
        }
        
        public string[] getBestRespondent() {
            return base.Channel.getBestRespondent();
        }
        
        public System.Threading.Tasks.Task<string[]> getBestRespondentAsync() {
            return base.Channel.getBestRespondentAsync();
        }
        
        public string[] getWorstRespondent() {
            return base.Channel.getWorstRespondent();
        }
        
        public System.Threading.Tasks.Task<string[]> getWorstRespondentAsync() {
            return base.Channel.getWorstRespondentAsync();
        }
        
        public string[] Top5Cities() {
            return base.Channel.Top5Cities();
        }
        
        public System.Threading.Tasks.Task<string[]> Top5CitiesAsync() {
            return base.Channel.Top5CitiesAsync();
        }
        
        public string[] Top5Surbub(string CityName) {
            return base.Channel.Top5Surbub(CityName);
        }
        
        public System.Threading.Tasks.Task<string[]> Top5SurbubAsync(string CityName) {
            return base.Channel.Top5SurbubAsync(CityName);
        }
        
        public Security_System.SecurityService.Case[] GetAreaCases(string city) {
            return base.Channel.GetAreaCases(city);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.Case[]> GetAreaCasesAsync(string city) {
            return base.Channel.GetAreaCasesAsync(city);
        }
        
        public string GetTimeInterval() {
            return base.Channel.GetTimeInterval();
        }
        
        public System.Threading.Tasks.Task<string> GetTimeIntervalAsync() {
            return base.Channel.GetTimeIntervalAsync();
        }
        
        public int TriggerAlarm(string userID, int triggerType) {
            return base.Channel.TriggerAlarm(userID, triggerType);
        }
        
        public System.Threading.Tasks.Task<int> TriggerAlarmAsync(string userID, int triggerType) {
            return base.Channel.TriggerAlarmAsync(userID, triggerType);
        }
        
        public string CheckHomeAlerts(string userID) {
            return base.Channel.CheckHomeAlerts(userID);
        }
        
        public System.Threading.Tasks.Task<string> CheckHomeAlertsAsync(string userID) {
            return base.Channel.CheckHomeAlertsAsync(userID);
        }
        
        public Security_System.SecurityService.Address[] GetAllAdresses() {
            return base.Channel.GetAllAdresses();
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.Address[]> GetAllAdressesAsync() {
            return base.Channel.GetAllAdressesAsync();
        }
        
        public Security_System.SecurityService.StringDateCase[] GetResCases(string respondentID) {
            return base.Channel.GetResCases(respondentID);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.StringDateCase[]> GetResCasesAsync(string respondentID) {
            return base.Channel.GetResCasesAsync(respondentID);
        }
        
        public int Respondent_DutyStatus(string respondentID, string status) {
            return base.Channel.Respondent_DutyStatus(respondentID, status);
        }
        
        public System.Threading.Tasks.Task<int> Respondent_DutyStatusAsync(string respondentID, string status) {
            return base.Channel.Respondent_DutyStatusAsync(respondentID, status);
        }
        
        public string AddCaseObject(string data, string description, string Strdatetime) {
            return base.Channel.AddCaseObject(data, description, Strdatetime);
        }
        
        public System.Threading.Tasks.Task<string> AddCaseObjectAsync(string data, string description, string Strdatetime) {
            return base.Channel.AddCaseObjectAsync(data, description, Strdatetime);
        }
        
        public Security_System.SecurityService.GeoLocation[] GetGeoLocations() {
            return base.Channel.GetGeoLocations();
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.GeoLocation[]> GetGeoLocationsAsync() {
            return base.Channel.GetGeoLocationsAsync();
        }
        
        public Security_System.SecurityService.GeoLocation GetRespondentLocation(string userID) {
            return base.Channel.GetRespondentLocation(userID);
        }
        
        public System.Threading.Tasks.Task<Security_System.SecurityService.GeoLocation> GetRespondentLocationAsync(string userID) {
            return base.Channel.GetRespondentLocationAsync(userID);
        }
        
        public int AddOccupant(string name, string surname, string id, string email, string ownwerID) {
            return base.Channel.AddOccupant(name, surname, id, email, ownwerID);
        }
        
        public System.Threading.Tasks.Task<int> AddOccupantAsync(string name, string surname, string id, string email, string ownwerID) {
            return base.Channel.AddOccupantAsync(name, surname, id, email, ownwerID);
        }
        
        public int SolveCase(int caseID) {
            return base.Channel.SolveCase(caseID);
        }
        
        public System.Threading.Tasks.Task<int> SolveCaseAsync(int caseID) {
            return base.Channel.SolveCaseAsync(caseID);
        }
        
        public int GetStatus(string userID) {
            return base.Channel.GetStatus(userID);
        }
        
        public System.Threading.Tasks.Task<int> GetStatusAsync(string userID) {
            return base.Channel.GetStatusAsync(userID);
        }
    }
}
